name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.13]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
    
    - name: Install dependencies
      run: |
        uv sync --dev
    
    - name: Lint with flake8
      run: |
        uv run flake8 server.py --count --select=E9,F63,F7,F82 --show-source --statistics
        uv run flake8 server.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Format check with black
      run: |
        uv run black --check server.py
    
    - name: Import sort check
      run: |
        uv run isort --check-only server.py
    
    - name: Type check with mypy
      run: |
        uv run mypy server.py --ignore-missing-imports
    
    - name: Test with pytest
      run: |
        uv run pytest tests/ --cov=. --cov-report=xml --cov-report=html
    
    - name: Security check with bandit
      run: |
        uv run bandit -r server.py
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t eda-assistant-mcp:latest .
    
    - name: Test Docker image
      run: |
        docker run --rm eda-assistant-mcp:latest python -c "import server; print('Docker build successful!')"